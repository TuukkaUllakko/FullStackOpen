{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tuukka\\\\Documents\\\\FullStackOpen\\\\part1\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = ({\n  handleClick,\n  text\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: handleClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }\n}, text);\n\nconst Statistics = props => {\n  const allFeedback = props.good + props.neutral + props.bad;\n  const average = (props.good - props.bad) / 3;\n  const posPrcnt = props.good / allFeedback * 100;\n\n  if (allFeedback === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, \"statistics\"), \"No feedback given\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"statistics\"), props.good, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), props.neutral, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), props.bad, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), allFeedback, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), \"average \", average, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), \"positive \", posPrcnt, \"%\");\n};\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"give feedback\"), /*#__PURE__*/React.createElement(Button, {\n    handleClick: () => setGood(good + 1),\n    text: \"good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: () => setNeutral(neutral + 1),\n    text: \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: () => setBad(bad + 1),\n    text: \"bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Tuukka/Documents/FullStackOpen/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","handleClick","text","Statistics","props","allFeedback","good","neutral","bad","average","posPrcnt","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = ({handleClick, text}) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst Statistics = (props) => {\n  const allFeedback = props.good + props.neutral + props.bad\n  const average = (props.good - props.bad) / 3\n  const posPrcnt = props.good / allFeedback * 100\n\n  if (allFeedback === 0)\n  {\n    return (\n      <div>\n        <h1>statistics</h1>\n\n        No feedback given\n      </div>\n    )\n  }\n  \n  return (\n    <div>\n      <h1>statistics</h1>\n      {props.good}\n      <br></br>\n      {props.neutral}\n      <br></br>\n      {props.bad}\n      <br></br>\n      {allFeedback}\n      <br></br>\n      average {average}\n      <br></br>\n      positive {posPrcnt}%\n    </div>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n\n      <Button handleClick={() => setGood(good + 1)} text=\"good\"/>\n      <Button handleClick={() => setNeutral(neutral + 1)} text=\"neutral\"/>\n      <Button handleClick={() => setBad(bad + 1)} text=\"bad\"/>\n\n      <Statistics good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}